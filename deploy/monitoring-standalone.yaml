---
apiVersion: v1
kind: Namespace
metadata:
 name: monitoring
---
apiVersion: v1
kind: ConfigMap
metadata:
 name: prometheus-config
 namespace: monitoring
data:
 prometheus.yml: |
  global:
    scrape_interval: 15s
  scrape_configs:
    - job_name: 'playsafe-api'
      metrics_path: /metrics    
      static_configs:
        - targets:
            - 'playsafe-api.playsafe.svc.cluster.local:80'
---
apiVersion: apps/v1
kind: Deployment
metadata:
 name: prometheus
 namespace: monitoring
 labels: { app: prometheus }
spec:
 replicas: 1
 selector: { matchLabels: { app: prometheus } }
 template:
  metadata:
   labels: { app: prometheus }
  spec:
   containers:
    - name: prometheus
      image: prom/prometheus:v2.52.0
      args:
       - "--config.file=/etc/prometheus/prometheus.yml"
      ports:
       - containerPort: 9090
      volumeMounts:
       - name: prom-config
         mountPath: /etc/prometheus
   volumes:
    - name: prom-config
      configMap:
       name: prometheus-config
---
apiVersion: v1
kind: Service
metadata:
 name: prometheus
 namespace: monitoring
spec:
 type: ClusterIP
 selector: { app: prometheus }
 ports:
  - name: http
    port: 9090
    targetPort: 9090
---
apiVersion: v1
kind: ConfigMap
metadata:
 name: grafana-datasources
 namespace: monitoring
data:
 datasources.yaml: |
  apiVersion: 1
  datasources:
    - name: Prometheus
      type: prometheus
      access: proxy
      url: http://prometheus.monitoring.svc.cluster.local:9090
      isDefault: true
---
apiVersion: apps/v1
kind: Deployment
metadata:
 name: grafana
 namespace: monitoring
 labels: { app: grafana }
spec:
 replicas: 1
 selector: { matchLabels: { app: grafana } }
 template:
  metadata:
   labels: { app: grafana }
  spec:
   containers:
    - name: grafana
      image: grafana/grafana:10.4.5
      ports:
       - containerPort: 3000
      env:
       - name: GF_SECURITY_ADMIN_USER
         value: admin
       - name: GF_SECURITY_ADMIN_PASSWORD
         value: admin
      volumeMounts:
       - name: grafana-ds
         mountPath: /etc/grafana/provisioning/datasources
   volumes:
    - name: grafana-ds
      configMap:
       name: grafana-datasources
---
apiVersion: v1
kind: Service
metadata:
 name: grafana
 namespace: monitoring
spec:
 type: ClusterIP
 selector: { app: grafana }
 ports:
  - name: http
    port: 80
    targetPort: 3000
